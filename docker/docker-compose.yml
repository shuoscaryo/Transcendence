services:
  postgresql:
    image: postgres:17
    container_name: postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - app-network
    restart: on-failure

  django:
    build:
      context: ..
      dockerfile: ./docker/django/Dockerfile-django
    image: django
    container_name: django
    environment:
      FORTY_TWO_CLIENT_SECRET: ${FORTY_TWO_CLIENT_SECRET}
      FORTY_TWO_CLIENT_ID: ${FORTY_TWO_CLIENT_ID}
      MNEMONIC: ${MNEMONIC}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes: 
      - django:/app
    networks:
      - app-network
    restart: on-failure
    depends_on:
      - postgresql
      - ganache

  nginx:
    build: ./nginx
    image: nginx
    container_name: nginx
    ports:
      - "443:443"
      - "80:80"
    volumes: 
      - django:/app
    networks:
      - app-network
    restart: on-failure
    depends_on:
      - django

  ganache:
    build:
      context: ..
      dockerfile: ./docker/ganache/Dockerfile-ganache
    image: ganache
    container_name: ganache
    environment:
      MNEMONIC: ${MNEMONIC}
    volumes:
      - ganache_db:/ganache_db
    networks:
      - app-network
    restart: on-failure

volumes:
  postgresql:
    name: Transcendence_postgresql
    driver: local
    driver_opts:
      type: none
      device: ../postgresql-data
      o: bind
  django:
    name: Transcendence_django
    driver: local
    driver_opts:
      type: none
      device: ../django
      o: bind
  ganache_db:
    name: Transcendence_ganache_db
    driver: local
    driver_opts:
      type: none
      device: ../ganache-db
      o: bind

networks:
  app-network:
    driver: bridge
    name: Transcendence_network
